@model CategoryModel

@{
    ViewData["Title"] = Model.CategoryId == 0 ? "Add Category" : "Edit Category";
}

<div class="container">
    <h2>@ViewData["Title"]</h2>

    <form asp-action="AddEdit" method="post">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @if (Model.CategoryId != 0)
        {
            <input type="hidden" asp-for="CategoryId" />
            <input type="hidden" asp-for="CreatedAt" />
        }

        <div class="mb-3">
            <label asp-for="UserId" class="form-label"></label>
            <select asp-for="UserId" class="form-select" asp-items="@(new SelectList(Model.UserList, "UserId", "FullName"))">
                <option value="">-- Select User --</option>
            </select>
            <span asp-validation-for="UserId" class="text-danger"></span>
        </div>

        <div class="mb-3">
            <label asp-for="CategoryName" class="form-label"></label>
            <input asp-for="CategoryName" class="form-control" />
            <span asp-validation-for="CategoryName" class="text-danger"></span>
        </div>

        <!-- Description -->
        <div class="mb-3">
            <label asp-for="Description" class="form-label"></label>
            <textarea asp-for="Description" class="form-control" rows="3"></textarea>
            <span asp-validation-for="Description" class="text-danger"></span>
        </div>

        <div class="mb-3">
            <button type="submit" class="btn btn-primary">@(Model.CategoryId == 0 ? "Create" : "Update")</button>
            <a asp-action="Index" class="btn btn-secondary">Back to List</a>
        </div>
    </form>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}